version: "2.4"
services:
  # Conectores
  company1:
    container_name: provider # Nombre del contenedor
    build:
      context: ../connecor # Donde se encuentra la raíz
      # args:
        # JVM_ARGS:  -Djava.net.preferIPv4Stack=true -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=0.0.0.0:1044
    environment: 
      EDC_FS_CONFIG: /configuracion/conf/configuration.properties # Ruta hasta las propiedades de configuración
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: https://sergio.arlabdevelopments.com:19192/control/token
    # Puertos, la "explicación" de cada uno se encuentra en sus propiedades especificas
    ports:
      - "19191:19191"
      - "19193:19193"
      - "19194:19194"
      - "19291:19291"
      - "19192:19192"
      - "1044:1044"

    volumes:
      - ./configuracion:/configuracion # Volumen añadido al contenedor de docker, para tener acceso a toda la configuración
    secrets:
      - unseal_keys

  company2:
    container_name: consumer # Nombre del contenedor
    build: 
      context: ../connecor # Donde se encuentra la raíz
      # args:
        # JVM_ARGS:  -Djava.net.preferIPv4Stack=true -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=0.0.0.0:1045
    environment: 
      EDC_FS_CONFIG: /configuracion/conf2/configuration.properties # Ruta hasta las propiedades de configuración
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: https://sergio.arlabdevelopments.com:29192/control/token
    # Puertos, la "explicación" de cada uno se encuentra en sus propiedades especificas
    ports:
      - "29191:29191"
      - "29193:29193"
      - "29194:29194"
      - "29291:29291"
      - "29192:29192"
      - "1045:1045"
    volumes:
      - ./configuracion:/configuracion # Volumen añadido al contenedor de docker, para tener acceso a toda la configuración
    secrets:
      - unseal_keys

  # Base de datos
  postgres1:
    container_name: postgres1 # Nombre del contenedor de postgres
    image: postgres:13.4 # Imagen y version a utilizar
    ports:
      - "5432:5432" # Puerto para acceder desde la maquina anfitiron
    environment:
      POSTGRES_USER: postgres # Usuario para conectarse
      POSTGRES_PASSWORD: edcpassword # Contraseña para conectarse
    volumes:
      - ./configuracion/db:/docker-entrypoint-initdb.d/ # Ruta hasta la carpeta que contiene el script «init.sql»

  postgres2:
    container_name: postgres2 # Nombre del contenedor de postgres
    image: postgres:13.4 # Imagen y version a utilizar
    ports:
      - "5433:5432" # Puerto para acceder desde la maquina anfitiron
    environment:
      POSTGRES_USER: postgres # Usuario para conectarse
      POSTGRES_PASSWORD: edcpassword # Contraseña para conectarse
    volumes:
      - ./configuracion/db:/docker-entrypoint-initdb.d/ # Ruta hasta la carpeta que contiene el script «init.sql»
    depends_on:
      - company2
  
  # Vault para almacenar los certificados
  hashicorp-vault:
    container_name: vault-server 
    image: vault:1.13.3 # Imagen del vaul que vamos a utilizar
    environment:
      VIRTUAL_HOST: vault-server.com
    ports:
      - "8200:8200" # Puerto tanto de la interfaz gráfica como del API
    volumes:
      - ./configuracion:/configuracion
    entrypoint: /configuracion/vault/unseal.sh




secrets:
  unseal_keys:
    file: ./configuracion/vault/keys