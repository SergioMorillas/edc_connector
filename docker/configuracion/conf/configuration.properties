# Id del participante, "nombre"
edc.participant.id=provider
edc.runtime.id=provider
edc.hostname=https://sergio.arlabdevelopments.com
# Direccion de callback 
edc.dsp.callback.address=https://sergio.arlabdevelopments.com:19194/protocol
# Dirección del endpoint al que van a apuntar las peticiones de tipo pull, anteriormente el logging house
edc.receiver.http.endpoint=https://sergio.arlabdevelopments.com:19191/api/pull

# Contraseña del API, va en la cabecera de las peticiones
edc.api.auth.key=password

# Configuración del vault de hashicorp
edc.vault.hashicorp.url=https://sergio.arlabdevelopments.com:8200
edc.vault.hashicorp.token=hvs.cA7LetckmMPTDS6Hwn40GKrU
edc.vault.hashicorp.timeout.seconds=30

# Configuración de los proxys para las transferencias de datos
edc.public.key.alias=certificate
edc.transfer.dataplane.token.signer.privatekey.alias=private_key
edc.transfer.proxy.token.signer.privatekey.alias=private_key
edc.transfer.proxy.token.verifier.publickey.alias=certificate

# URL de validación de tokens
edc.dataplane.token.validation.endpoint=https://sergio.arlabdevelopments.com:19192/control/token

# Puertos
web.http.port=19191
web.http.path=/api
web.http.management.port=19193
web.http.management.path=/management
web.http.protocol.port=19194
web.http.protocol.path=/protocol
web.http.public.port=19291
web.http.public.path=/public
web.http.control.port=19192
web.http.control.path=/control

# PostgreSQL
# Diferentes conexiones a las fuentes de datos, segun si es para hacer uso de assets, politicas, contratos... 
edc.datasource.asset.name=asset
edc.datasource.asset.user=postgres
edc.datasource.asset.password=edcpassword
edc.datasource.asset.url=jdbc:postgresql://postgres1:5432/postgres

edc.datasource.policy.name=policy
edc.datasource.policy.user=postgres
edc.datasource.policy.password=edcpassword
edc.datasource.policy.url=jdbc:postgresql://postgres1:5432/postgres

edc.datasource.contractdefinition.name=contractdefinition
edc.datasource.contractdefinition.user=postgres
edc.datasource.contractdefinition.password=edcpassword
edc.datasource.contractdefinition.url=jdbc:postgresql://postgres1:5432/postgres

edc.datasource.contractnegotiation.name=contractnegotiation
edc.datasource.contractnegotiation.user=postgres
edc.datasource.contractnegotiation.password=edcpassword
edc.datasource.contractnegotiation.url=jdbc:postgresql://postgres1:5432/postgres

edc.datasource.transferprocess.name=transferprocess
edc.datasource.transferprocess.user=postgres
edc.datasource.transferprocess.password=edcpassword
edc.datasource.transferprocess.url=jdbc:postgresql://postgres1:5432/postgres

edc.datasource.default.name=default
edc.datasource.default.user=postgres
edc.datasource.default.password=edcpassword
edc.datasource.default.url=jdbc:postgresql://postgres1:5432/postgres

# Almacen de certificados para la configuración del TLS /// El mismo de Lets Encrypt para los dos conectores funciona bien
edc.web.https.keymanager.password=password

edc.web.https.keystore.password=password
edc.web.https.keystore.path=/configuracion/certificados/keyStore.p12
edc.web.https.keystore.type=PKCS12

# Keycloack
edc.oauth.token.url=https://sergio.arlabdevelopments.com:8443/realms/master/protocol/openid-connect/token
edc.oauth.certificate.alias=certificate
edc.oauth.private.key.alias=private-key
edc.oauth.client.id=39a7029c-e98c-4b82-8c68-2eb26efacd4b
edc.oauth.provider.jwks.url=https://sergio.arlabdevelopments.com:8443/realms/master/protocol/openid-connect/certs